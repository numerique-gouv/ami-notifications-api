[project]
name = "ami-notifications-api"
version = "0.1.0"
description = "AMI notifications API"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "asyncpg>=0.30.0",
    "httpx>=0.28.1",
    "litestar[sqlalchemy,standard]>=2.15.1",
    "sentry-sdk[litestar]>=2.29.1",
    "sqlmodel>=0.0.24",
    "types-requests>=2.32.0.20250328",
    "webpush>=1.0.5",
]

[dependency-groups]
dev = [
    "alembic>=1.15.2",
    "ipdb>=0.13.13",
    "pre-commit>=4.2.0",
    "pre-commit-uv>=4.1.4",
    "pyright>=1.1.390",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-httpx>=0.35.0",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.2",
]

[tool.pyright]
# Python version and environment
pythonVersion = "3.13"
include = ["app", "tests"]
exclude = [".venv", "node_modules", "public/mobile-app"]

# Type checking mode
typeCheckingMode = "strict"

# Enable specific checks
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportTypedDictNotRequiredAccess = false

# Relaxed settings for tests
[tool.pyright.defineConstant]
# Allow more flexible typing in test files

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["I"] # also sort imports with an isort rule

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
