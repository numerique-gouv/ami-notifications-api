"""datetime with timestamp

Revision ID: 291953dacae4
Revises: efc4f6e39a83
Create Date: 2025-10-27 18:48:30.740412

"""

from typing import Sequence, Union

import advanced_alchemy
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "291953dacae4"
down_revision: Union[str, None] = "efc4f6e39a83"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "notification",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        type_=advanced_alchemy.types.DateTimeUTC(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "registration",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=advanced_alchemy.types.DateTimeUTC(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2025-10-23 19:28:12.567036'::timestamp without time zone"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "registration",
        "created_at",
        existing_type=advanced_alchemy.types.DateTimeUTC(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text(
            "'2025-10-23 19:28:12.567036'::timestamp without time zone"
        ),
    )
    op.alter_column(
        "notification",
        "date",
        existing_type=advanced_alchemy.types.DateTimeUTC(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
